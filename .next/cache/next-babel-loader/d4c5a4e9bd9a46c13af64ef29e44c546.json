{"ast":null,"code":"var _jsxFileName = \"C:\\\\marcelo3\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreat) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreat) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checkes').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreat = true;\n\n    if (todaysData) {\n      // pode ver os outros checkins\n      forceCreat = false;\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreat\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/marcelo3/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreat","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAoB,aAApB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACbJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAFD,MAEM,IAAGF,KAAK,CAACG,UAAT,EAAoB;AACtBN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;;AAOA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,UAA1B,EAAqC;AACjC,WAAO,IAAP;AACH;;AACD,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFH,CADA;AAMH,CAjBD;;AAmBA,eAAgBD,GAAhB;AAEA,OAAO,eAAgBO,kBAAhB,CAAoC;AAACC,EAAAA,GAAD;AAAOC,EAAAA;AAAP,CAApC,EAAiD;AACpD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAGE,OAAH,EAAW;AACP,UAAME,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,WAAW,GAAGF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA2BH,KAAK,CAACI,QAAN,EAA3B,GAA4C,GAA5C,GAAiDJ,KAAK,CAACK,OAAN,EAArE;AACF,UAAMC,aAAa,GAAG,MAAMnB,EAAE,CACvBoB,UADqB,CACV,SADU,EAErBC,GAFqB,CAEjBN,WAFiB,EAGrBK,UAHqB,CAGV,SAHU,EAIrBC,GAJqB,CAIjBV,OAAO,CAACW,IAAR,CAAaC,GAJI,EAKrBC,GALqB,EAA5B;AAME,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAIrB,UAAU,GAAI,IAAlB;;AACA,QAAGoB,UAAH,EAAc;AACV;AACApB,MAAAA,UAAU,GAAG,KAAb;AACH;;AAED,WAAQ;AACJH,MAAAA,KAAK,EAAC;AACFC,QAAAA,MAAM,EAAC,IADL;AAEFmB,QAAAA,IAAI,EAAEX,OAAO,CAACW,IAFZ;AAGFjB,QAAAA;AAHE;AADF,KAAR;AAOH;;AACD,SAAO;AACHH,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAC,KADJ;AAEHmB,MAAAA,IAAI,EAAC;AAFF;AADJ,GAAP;AAOH","sourcesContent":["import React, { useEffect }from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from  'next/router'\r\nimport { db } from '../lib/db'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/')\r\n        }else if(props.forceCreat){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if(!props.isAuth || props.forceCreat){\r\n        return null \r\n    }\r\n    return(\r\n    <div>\r\n       <h1>App</h1>\r\n       <pre>{JSON.stringify(props, null, 2)}</pre>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default  App\r\n\r\nexport async function  getServerSideProps ({req , res}) {\r\n    const session = await auth0.getSession(req)\r\n    if(session){\r\n        const today = new Date()\r\n        const currentDate = today.getFullYear() + '-'+ today.getMonth()+'-'+ today.getDate()  \r\n      const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate) \r\n            .collection('checkes')\r\n            .doc(session.user.sub)\r\n            .get()\r\n        const todaysData = todaysCheckin.data()\r\n        let forceCreat  = true\r\n        if(todaysData){\r\n            // pode ver os outros checkins\r\n            forceCreat = false\r\n        }\r\n                                  \r\n        return  {\r\n            props:{\r\n                isAuth:true,\r\n                user: session.user,\r\n                forceCreat\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth:false,\r\n            user:{\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}