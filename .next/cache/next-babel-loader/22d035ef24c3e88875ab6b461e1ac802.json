{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\marcelo3\\\\pages\\\\create-status.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nvar CreateStatus = function CreateStatus() {\n  var _useState = useState({\n    status: 'bem',\n    coords: {\n      lat: null,\n      \"long\": null\n    }\n  }),\n      dados = _useState[0],\n      setDados = _useState[1];\n\n  var getMyLocation = function getMyLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setDados(function (old) {\n          return _objectSpread({}, old, {\n            coords: {\n              lat: position.coords.latitude,\n              \"long\": position.coords.longitude\n            }\n          });\n        });\n      });\n    }\n  };\n\n  var onStatusChange = function onStatusChange(evt) {\n    var value = evt.target.value;\n    setDados(function (old) {\n      return _objectSpread({}, old, {\n        status: value\n      });\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, \"Create Status\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"bem\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }\n  }), \"Estou bem e sem sintomas.\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"gripe\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }\n  }), \"Estou com sintoas de gripe/ resfriado.\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"covid\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }\n  }), \"Estou com sintomas da CONVID.\"), \"Sua posi\\xE7\\xE3o atual:\", JSON.stringify(dados), __jsx(\"button\", {\n    onClick: getMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  }, \"Get my location\"));\n};\n\nexport var __N_SSP = true;\nexport default CreateStatus;","map":{"version":3,"sources":["C:/marcelo3/pages/create-status.js"],"names":["React","useState","CreateStatus","status","coords","lat","dados","setDados","getMyLocation","navigator","geolocation","getCurrentPosition","position","old","latitude","longitude","onStatusChange","evt","value","target","JSON","stringify"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACGD,QAAQ,CAAE;AAChCE,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EAAC,IADA;AAEJ,cAAM;AAFF;AAFwB,GAAF,CADX;AAAA,MAChBC,KADgB;AAAA,MACTC,QADS;;AAQvB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACrBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACjDL,QAAAA,QAAQ,CAAC,UAAAM,GAAG,EAAI;AACZ,mCACOA,GADP;AAEIT,YAAAA,MAAM,EAAC;AACLC,cAAAA,GAAG,EAAEO,QAAQ,CAACR,MAAT,CAAgBU,QADhB;AAEL,sBAAMF,QAAQ,CAACR,MAAT,CAAgBW;AAFjB;AAFX;AAOH,SARO,CAAR;AASH,OAVD;AAWH;AACJ,GAdD;;AAeA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAI;AAC1B,QAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAWD,KAAzB;AACAX,IAAAA,QAAQ,CAAC,UAAAM,GAAG,EAAI;AACZ,+BACOA,GADP;AAEIV,QAAAA,MAAM,EAAEe;AAFZ;AAIH,KALO,CAAR;AAOH,GATD;;AAUA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,KAAxC;AAA8C,IAAA,OAAO,EAAEF,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,8BAFD,EAGC;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAgD,IAAA,OAAO,EAAEA,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,2CAHD,EAIC;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAgD,IAAA,OAAO,EAAEA,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,kCAJD,8BAKoBI,IAAI,CAACC,SAAL,CAAef,KAAf,CALpB,EAMC;AAAS,IAAA,OAAO,EAAEE,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAND,CADA;AAWH,CA5CD;;;AA8CA,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport auth0 from '../lib/auth0'\r\n\r\nconst CreateStatus = () => {\r\n    const [dados, setDados] = useState ({\r\n        status: 'bem',\r\n        coords: {\r\n            lat:null,\r\n            long: null\r\n        }\r\n    })\r\n    const getMyLocation = () => {\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                setDados(old => {\r\n                    return {\r\n                        ...old,\r\n                        coords:{\r\n                          lat: position.coords.latitude,\r\n                          long: position.coords.longitude\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n    const onStatusChange = evt => {\r\n        const value = evt.target.value\r\n        setDados(old => {\r\n            return {\r\n                ...old,\r\n                status: value\r\n            }\r\n        })\r\n       \r\n    }\r\n    return(\r\n    <div>\r\n     <h1>Create Status</h1>\r\n     <label className='block'><input type='radio' name='status' value='bem' onClick={onStatusChange}/>Estou bem e sem sintomas.</label>\r\n     <label className='block'><input type='radio' name='status' value='gripe' onClick={onStatusChange}/>Estou com sintoas de gripe/ resfriado.</label>\r\n     <label className='block'><input type='radio' name='status' value='covid' onClick={onStatusChange} />Estou com sintomas da CONVID.</label>\r\n     Sua posição atual:{JSON.stringify(dados)}\r\n     <button  onClick={getMyLocation}>Get my location</button>\r\n     </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateStatus\r\n\r\nexport async function  getServerSideProps ({req , res}) {\r\n    const session = await auth0.getSession(req)\r\n\r\n    if(session){\r\n    return  {\r\n        props:{\r\n            isAuth:true,\r\n            user: session.user,\r\n        }\r\n    }\r\n}\r\nreturn {\r\n    props: {\r\n        isAuth:false,\r\n        user:{\r\n        }\r\n    }\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}